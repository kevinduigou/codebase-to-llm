version: '3.8'

services:
  fastapi-app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./data/users.db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - app_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  downloader-worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile.downloader
    environment:
      - REDIS_URL=redis://redis:6379/0
      - HTTP_PROXY_SMARTPROXY=${HTTP_PROXY_SMARTPROXY}
      - HTTPS_PROXY_SMARTPROXY=${HTTPS_PROXY_SMARTPROXY}
    depends_on:
      - redis
    volumes:
      - app_data:/app/data
    restart: unless-stopped

  # Optional PostgreSQL database service (uncomment if you want to use PostgreSQL instead of SQLite)
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: codebase_to_llm
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

volumes:
  app_data:
  # postgres_data:  # Uncomment if using PostgreSQL
